install.packages("rhino")
install.packages("rhino")
rhino::init("RhinoApplication")
library(tidyverse)
install.packages("tidyvers")
stop
install.packages("tidyverse")
renv::snapshot()
renv::snapshot()
renv::init()
install.packages("box")
library(htmlwidgets)
install.packages("box")
renv::snapshot()
N
renv::snapshot()
?renv::activate
renv::install(box)
renv::install("box")
renv::install("rhino","reactable","tidyverse","dplyr","tidyr","htmlwidgets")
shiny::runApp('IBD-Application/IBD-DB')
library(shiny)
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
library(box)
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
runApp('IBD-Application/IBD-DB')
shiny::runApp('testIBD')
runApp('testIBD')
runApp('testIBD')
install.packages("memoise")
install.packages("box")
#-------------------------------------------------------------------------------
# SERVER FUNCTION
#-------------------------------------------------------------------------------
library(box)
library(conflicted)
library("conflicted")
install.packages("conflicted")
runApp('testIBD')
shiny::runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('testIBD')
runApp('testIBD')
runApp('testIBD')
runApp('testIBD')
runApp('testIBD')
renv::activate("shinycssloaders","shiny","prompter","htmlwidgets","futile.logger")
renv::install("shinycssloaders","shiny","prompter","htmlwidgets","futile.logger")
renv::snapshot()
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
renv::restore()
runApp('IBD-Application/IBD2/ibd2')
renv::install("bstheme")
renv::install("bslib")
renv::snapshot()
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
renv::install("tidyverse")
renv::snapshot()
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
library(tidyverse)
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
renv::intall("htmltools")
renv::install("htmltools")
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
renv::install("htmltools","htmlwidgets")
renv::snapshot
renv::snapshot()
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
renv::install("shiny")
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
renv::install("shinycssloaders")
runApp('IBD-Application/IBD2/ibd2')
renv::snapshot()
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
shiny::runApp('IBD-Application/IBD2/ibd2')
shiny::runApp('IBD-Application/IBD2/ibd2')
box::use(
app/logic/data[
#links
GEO_BASE,GENECARDS_BASE,S3_HTTPS,
#raw data
app_data,
#processed data
exps,degs,metadata,deg_contrasts,eres],
app/logic/utils[makeHeaders,helpButton]
)
runApp('IBD-Application/IBD2/ibd2')
?server
?shiny::server
shiny::serverInfo()
serverInfo
shiny::runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
Sys.setenv(OPENAI_API_KEY = "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")
require(devtools)
install_github("MichelNivard/gptstudio")
install.packages("devtools")
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
styler:::set_style_transformers()
styler:::style_active_file()
renv::install("UpSet")
shiny::runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
install.packages(ggplot2)
renv::install("ggplot2")
library(DT)
library(rhino)
library(htmlwidgets)
library(htmltools)
library(shinycssloaders)
library(shiny)
library(tidyverse)
library(lobstr)
library(dplyr)
library(tidyr)
library(shinycssloaders)
library(prompter)
library(pheatmap)
library(tibble)
library(futile.logger)
library(ggplot2)
library(DT)
runApp('IBD-Application/IBD2/ibd2')
runApp('IBD-Application/IBD2/ibd2')
renv::install(ggupset)
renv::install
renv::install("ggupset")
renv::install(ggupset)
renv::install("ggupset")
shiny::runApp('IBD-Application/IBD-DB')
GEO_BASE <- "https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc="
GENECARDS_BASE <- "https://www.genecards.org/cgi-bin/carddisp.pl?gene="
S3_HTTPS <- "https://liverdb-data.s3.amazonaws.com/"
app_data <- readRDS("app/data/app_data.rds")
app_data <- readRDS("app/data/app_data.rds")
app_data <- readRDS(app/data/"app_data.rds")
setwd("E:/CODING/R-WD1/IBD-Application/IBD-DB")
app_data <- readRDS("app/data/app_data.rds")
exps1 <- app_data[["exps"]]
degs1 <- app_data[["degs"]]
metadata1 <- app_data[["metadata"]]
deg_contrasts1 <- app_data[["contrasts"]]
eres1 <- app_data[["eres"]]
rm(rm=ls())
rm)list=lss())
rm(list=ls())
GEO_BASE <- "https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc="
GENECARDS_BASE <- "https://www.genecards.org/cgi-bin/carddisp.pl?gene="
S3_HTTPS <- "https://liverdb-data.s3.amazonaws.com/"
app_data <- readRDS("app/data/app_data.rds")
exps1 <- app_data[["exps"]]
degs1 <- app_data[["degs"]]
metadata1 <- app_data[["metadata"]]
deg_contrasts1 <- app_data[["contrasts"]]
eres1 <- app_data[["eres"]]
View(degs1)
runApp()
View(degs1)
degs <- as.data.frame(degs1)
deg126 <- deg1[["GSE126848"]]
degs1 <- app_data[["degs"]]
deg126 <- deg1[["GSE126848"]]
degs126 <- degs1[["GSE126848"]]
View(degs126)
deg135 <- degs1[["GSE135251"]]
character(deg135)
element(degs135)
class(degs135)
class("degs135")
class(deg135)
degs135 <- degs1[["GSE135251"]]
View(degs126)
runApp()
runApp()
deg_contrasts <- app_data[["contrasts"]]
View(deg_contrasts)
runApp()
runApp()
box::use(
#raw data
app/data/app_data.rds,
#logic folder
app/logic/data,
app/logic/ui_globals,
app/logic/utils,
#view folder
app/view/memory,
app/view/layout,
)
runApp()
file.exists(app/data/app_data.rds)
file.exists("app/data/app_data.rds")
runApp()
?box
?box_read
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
renv::snapshot()
ggupset(m, nsets = length(all_set_names),
sets = all_set_names,
pointSize = 0.5,
setOrder = "freq",
textSize = 10)
renv::install
renv::install("ggupset")
ggupset(m, nsets = length(all_set_names),
sets = all_set_names,
pointSize = 0.5,
setOrder = "freq",
textSize = 10)
runApp()
renv::install("UpSetR")
renv::snapshot()
runApp()
runApp()
runApp()
runApp()
View(degs126)
View(degs126)
runApp()
runApp()
View(app_data)
View(app_data)
deg_contrasts <- app_data[["contrasts"]]
View(deg_contrasts)
rm(deg_contrasts1)
runApp()
runApp()
View(deg_contrasts)
runApp()
View(app_data)
View(exps1)
View(exps1)
View(eres1)
View(degs1)
View(eres1)
View(degs1)
View(deg135)
View(degs1)
mergedDegs <- dplyr::full_join(degs126filtered,
degs135filtered, by = "gene_name")
runApp()
runApp()
runApp()
ls(degs126,deg_contrasts)
runApp()
View(eres1)
