#!/home/rvel/mambaforge/envs/nfBRN/bin/nextflow
// usage: nextflow run nfBRN.nf 

// CONSTANTS //

MAX_RETRIES = 3
DELETE_INTERMEDIATES = true

PREFETCH_MAXFORKS = 2 // limit parallel forks 
FASTQ_MAXFORKS = 8
FASTP_MAXFORKS = 8
STAR_ALIGN_THREADS = 6

// INITIALISATIONS //

SRRdata = "~/nextflow1/data/SRR.txt"
ch_runs = Channel.fromPath(SRRdata)

// empty lists - to be used for process CHECK_SP
se_runs = []
pe_runs = []

// PROCESSES // 

// not sure if needed -- checks if runs are single or paired end 
process CHECK_SP {

  input:
  val id from ch_runs

  output:
  tuple id, is_pe into ch_runs

  script:
  """
  sra-stat ${id} | grep LibraryLayout | cut -f2 -d ' ' | tr '[:upper:]' '[:lower:]'
  """

  stdout.trim().toLowerCase().eachLine { layout ->
    is_pe = (layout == "paired")
    if (is_pe) {
        se_runs.add(id)
    } else {
        pe_runs.add(id)
    }
  }
}

// PREFETCH - converts SRA IDs into FASTQ format 
process PREFETCH {

errorStrategy 'retry'
maxRetries MAX_RETRIES

input:
val id from ch_runs.flatten()

output:
file "${id}.sra" into ch_sra

script:
"""
prefetch ${id}
"""
}

// converts to FASTQ format 
process FASTQ {

errorStrategy 'retry'
maxForks FASTQ_MAXFORKS
maxRetries MAX_RETRIES

input:
file sra from ch_sra

output: 
file "${id}.fastq" into ch_fq

script:
id = sra.simpleName
"""
fastq-dump --split-files ${sra}
"""
}

// FASTP - quality control and trimming of FASTQ files
process FASTP {

  maxForks FASTP_MAXFORKS
  errorStrategy 'retry'
  maxRetries MAX_RETRIES
  
  input:
  file fq from ch_fq
  
  output:
  file "trimmed_fastq/${id}_{1,2}.trimmed.fastq" into ch_tfq
  
  script:
  if(!(fq instanceof List)) {  // handle single end
    id = fq.simpleName.split("_")[0]
    """
    fastp -i ${fq} \
          -o ${id}_1.trimmed.fastq
    
    if ${DELETE_INTERMEDIATES}; then
      readlink ${fq} | xargs rm --
      rm ${fq}
    fi
    """
  } else {  // handle paired end
    id = fq[0].simpleName.split("_")[0]
    """
    fastp -i ${fq[0]} \
          -I ${fq[1]} \
          -o ${id}_1.trimmed.fastq \
          -O ${id}_2.trimmed.fastq
    
    if ${DELETE_INTERMEDIATES}; then
      readlink ${fq} | xargs rm --
      rm ${fq}
    fi
    """
  }
}



